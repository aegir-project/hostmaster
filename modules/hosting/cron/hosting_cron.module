<?php

function hosting_cron_hosting_queues() {
  $items['cron'] = array(
    'type' => 'batch',
    'name' => t('Cron queue'),
    'description' => t('Run cron on hosted sites.'),
    'total_items' => hosting_site_count(),
    'frequency' => strtotime("1 hour", 0),
    'min_threads' => 6,
    'max_threads' => 12,
    'threshold' => 100,
    'singular' => t('site'),
    'plural' => t('sites'),
  );
  return $items;
}

function hosting_cron_queue($count) {
  $sites = hosting_cron_get_sites($count);

  foreach ($sites as $site) {
    $site_name = hosting_context_name($site->nid);

    if (variable_get('hosting_cron_use_backend', TRUE)) {
      provision_backend_invoke($site_name, "cron");
    }
    else {
      $cmd = sprintf("wget -O - -q %s  > /dev/null", escapeshellarg(_hosting_site_url($site) . '/cron.php'));
      drush_shell_exec($cmd);
    }

    // We are updating the site table here directly to avoid a possible race condition,
    // with the task queue. There exists a chance that they might both try to save the
    // same node at the same time, and then an old record from the cron queue might
    // replace the newly updated record.
    db_query("UPDATE {hosting_site} SET last_cron=%d WHERE nid=%d", mktime(), $site->nid);
    
    // A small trick to avoid high load when still too many crons are started at once.
    sleep(3);
  }
}

function hosting_cron_nodeapi(&$node, $op, $a3 = null) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'view':
        if (!$a3) {
          // @todo : turn it into x minutes ago
          $node->content['info']['last_cron'] = array(
            '#type' => 'item',
            '#title' => t('Cron run'),
            '#weight' => 20,
            '#value' => hosting_format_interval($node->last_cron)
          );
        }
        break;
    }
  }
}

function hosting_cron_get_sites($limit = 5) {
  $result = db_query("SELECT n.nid FROM {node} n LEFT JOIN {hosting_site} s ON n.nid=s.nid WHERE n.type='site' and s.status = %d ORDER BY s.last_cron ASC, n.nid ASC limit %d", HOSTING_SITE_ENABLED, $limit);
  while ($nid = db_fetch_object($result)) {
    $sites[$nid->nid] = node_load($nid->nid);
  }
  return $sites;
}
